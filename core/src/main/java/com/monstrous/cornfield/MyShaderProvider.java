package com.monstrous.cornfield;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.g3d.Renderable;
import com.badlogic.gdx.graphics.g3d.Shader;
import com.badlogic.gdx.graphics.g3d.shaders.DefaultShader;
import com.badlogic.gdx.graphics.g3d.utils.ShaderProvider;


public class MyShaderProvider implements ShaderProvider {

    public static final String SHADER_NAME = "instanced-rendering";

    @Override
    public Shader getShader(Renderable renderable) {

        String versionDirective = "#version 300 es\n";

        DefaultShader.Config config = new DefaultShader.Config(Gdx.files.internal("shaders/"+SHADER_NAME+".vertex.glsl").readString(),
            Gdx.files.internal("shaders/"+SHADER_NAME+".fragment.glsl").readString());
        config.numBones = 0;
        config.numDirectionalLights = 1;
        config.numSpotLights = 0;
        config.ignoreUnimplemented = true;

        // some juggling is needed to ensure the version directive appears before the prefix generated by the default shader
        String prefix = DefaultShader.createPrefix(renderable, config);

        Shader shader = new DefaultShader(renderable, config, versionDirective + prefix);

        shader.init();

        return shader;
    }

    @Override
    public void dispose() {

    }
}
